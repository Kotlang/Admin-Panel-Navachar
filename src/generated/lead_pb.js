// source: lead.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.login.AddressFilters', null, global);
goog.exportSymbol('proto.login.BulkIdRequest', null, global);
goog.exportSymbol('proto.login.CreateOrUpdateLeadRequest', null, global);
goog.exportSymbol('proto.login.FetchLeadsRequest', null, global);
goog.exportSymbol('proto.login.LeadChannel', null, global);
goog.exportSymbol('proto.login.LeadFilters', null, global);
goog.exportSymbol('proto.login.LeadIdRequest', null, global);
goog.exportSymbol('proto.login.LeadListResponse', null, global);
goog.exportSymbol('proto.login.LeadProto', null, global);
goog.exportSymbol('proto.login.OperatorType', null, global);
goog.exportSymbol('proto.login.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.CreateOrUpdateLeadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.login.CreateOrUpdateLeadRequest.repeatedFields_, null);
};
goog.inherits(proto.login.CreateOrUpdateLeadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.CreateOrUpdateLeadRequest.displayName = 'proto.login.CreateOrUpdateLeadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.LeadProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.login.LeadProto.repeatedFields_, null);
};
goog.inherits(proto.login.LeadProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.LeadProto.displayName = 'proto.login.LeadProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.FetchLeadsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.login.FetchLeadsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.FetchLeadsRequest.displayName = 'proto.login.FetchLeadsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.LeadFilters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.login.LeadFilters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.LeadFilters.displayName = 'proto.login.LeadFilters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.AddressFilters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.login.AddressFilters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.AddressFilters.displayName = 'proto.login.AddressFilters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.LeadListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.login.LeadListResponse.repeatedFields_, null);
};
goog.inherits(proto.login.LeadListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.LeadListResponse.displayName = 'proto.login.LeadListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.BulkIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.login.BulkIdRequest.repeatedFields_, null);
};
goog.inherits(proto.login.BulkIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.BulkIdRequest.displayName = 'proto.login.BulkIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.login.LeadIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.login.LeadIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.login.LeadIdRequest.displayName = 'proto.login.LeadIdRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.login.CreateOrUpdateLeadRequest.repeatedFields_ = [6,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.login.CreateOrUpdateLeadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.CreateOrUpdateLeadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.CreateOrUpdateLeadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phonenumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operatortype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    source: jspb.Message.getFieldWithDefault(msg, 5, ""),
    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),
    common_pb.AddressProto.toObject, includeInstance),
    landsizeinacres: jspb.Message.getFieldWithDefault(msg, 7, 0),
    farmingtype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    certificationdetails: (f = msg.getCertificationdetails()) && common_pb.CertificationDetails.toObject(includeInstance, f),
    cropsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    mainprofession: jspb.Message.getFieldWithDefault(msg, 11, ""),
    organizationname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    sideprofession: jspb.Message.getFieldWithDefault(msg, 13, ""),
    userinterviewnotes: jspb.Message.getFieldWithDefault(msg, 14, ""),
    education: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.CreateOrUpdateLeadRequest}
 */
proto.login.CreateOrUpdateLeadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.CreateOrUpdateLeadRequest;
  return proto.login.CreateOrUpdateLeadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.CreateOrUpdateLeadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.CreateOrUpdateLeadRequest}
 */
proto.login.CreateOrUpdateLeadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenumber(value);
      break;
    case 3:
      var value = /** @type {!proto.login.OperatorType} */ (reader.readEnum());
      msg.setOperatortype(value);
      break;
    case 4:
      var value = /** @type {!proto.login.LeadChannel} */ (reader.readEnum());
      msg.setChannel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 6:
      var value = new common_pb.AddressProto;
      reader.readMessage(value,common_pb.AddressProto.deserializeBinaryFromReader);
      msg.addAddresses(value);
      break;
    case 7:
      var value = /** @type {!proto.login.LandSizeInAcres} */ (reader.readEnum());
      msg.setLandsizeinacres(value);
      break;
    case 8:
      var value = /** @type {!proto.login.FarmingType} */ (reader.readEnum());
      msg.setFarmingtype(value);
      break;
    case 9:
      var value = new common_pb.CertificationDetails;
      reader.readMessage(value,common_pb.CertificationDetails.deserializeBinaryFromReader);
      msg.setCertificationdetails(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addCrops(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainprofession(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSideprofession(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserinterviewnotes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEducation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.CreateOrUpdateLeadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.CreateOrUpdateLeadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.CreateOrUpdateLeadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhonenumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperatortype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      common_pb.AddressProto.serializeBinaryToWriter
    );
  }
  f = message.getLandsizeinacres();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getFarmingtype();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getCertificationdetails();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.CertificationDetails.serializeBinaryToWriter
    );
  }
  f = message.getCropsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getMainprofession();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOrganizationname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSideprofession();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUserinterviewnotes();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEducation();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string phoneNumber = 2;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getPhonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setPhonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OperatorType operatorType = 3;
 * @return {!proto.login.OperatorType}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getOperatortype = function() {
  return /** @type {!proto.login.OperatorType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.login.OperatorType} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setOperatortype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional LeadChannel channel = 4;
 * @return {!proto.login.LeadChannel}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getChannel = function() {
  return /** @type {!proto.login.LeadChannel} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.login.LeadChannel} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setChannel = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string source = 5;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated AddressProto addresses = 6;
 * @return {!Array<!proto.login.AddressProto>}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getAddressesList = function() {
  return /** @type{!Array<!proto.login.AddressProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.AddressProto, 6));
};


/**
 * @param {!Array<!proto.login.AddressProto>} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
*/
proto.login.CreateOrUpdateLeadRequest.prototype.setAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.login.AddressProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.login.AddressProto}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.addAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.login.AddressProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};


/**
 * optional LandSizeInAcres landSizeInAcres = 7;
 * @return {!proto.login.LandSizeInAcres}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getLandsizeinacres = function() {
  return /** @type {!proto.login.LandSizeInAcres} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.login.LandSizeInAcres} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setLandsizeinacres = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional FarmingType farmingType = 8;
 * @return {!proto.login.FarmingType}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getFarmingtype = function() {
  return /** @type {!proto.login.FarmingType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.login.FarmingType} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setFarmingtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional CertificationDetails certificationDetails = 9;
 * @return {?proto.login.CertificationDetails}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getCertificationdetails = function() {
  return /** @type{?proto.login.CertificationDetails} */ (
    jspb.Message.getWrapperField(this, common_pb.CertificationDetails, 9));
};


/**
 * @param {?proto.login.CertificationDetails|undefined} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
*/
proto.login.CreateOrUpdateLeadRequest.prototype.setCertificationdetails = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.clearCertificationdetails = function() {
  return this.setCertificationdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.hasCertificationdetails = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string crops = 10;
 * @return {!Array<string>}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getCropsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setCropsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.addCrops = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.clearCropsList = function() {
  return this.setCropsList([]);
};


/**
 * optional string mainProfession = 11;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getMainprofession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setMainprofession = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string organizationName = 12;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getOrganizationname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setOrganizationname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string sideProfession = 13;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getSideprofession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setSideprofession = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string userInterviewNotes = 14;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getUserinterviewnotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setUserinterviewnotes = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string education = 15;
 * @return {string}
 */
proto.login.CreateOrUpdateLeadRequest.prototype.getEducation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.CreateOrUpdateLeadRequest} returns this
 */
proto.login.CreateOrUpdateLeadRequest.prototype.setEducation = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.login.LeadProto.repeatedFields_ = [7,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.LeadProto.prototype.toObject = function(opt_includeInstance) {
  return proto.login.LeadProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.LeadProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    leadId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phonenumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    operatortype: jspb.Message.getFieldWithDefault(msg, 4, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 5, 0),
    source: jspb.Message.getFieldWithDefault(msg, 6, ""),
    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),
    common_pb.AddressProto.toObject, includeInstance),
    landsizeinacres: jspb.Message.getFieldWithDefault(msg, 8, 0),
    farmingtype: jspb.Message.getFieldWithDefault(msg, 9, 0),
    certificationdetails: (f = msg.getCertificationdetails()) && common_pb.CertificationDetails.toObject(includeInstance, f),
    cropsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    mainprofession: jspb.Message.getFieldWithDefault(msg, 12, ""),
    organizationname: jspb.Message.getFieldWithDefault(msg, 13, ""),
    sideprofession: jspb.Message.getFieldWithDefault(msg, 14, ""),
    userinterviewnotes: jspb.Message.getFieldWithDefault(msg, 15, ""),
    education: jspb.Message.getFieldWithDefault(msg, 16, ""),
    status: jspb.Message.getFieldWithDefault(msg, 17, 0),
    createdon: jspb.Message.getFieldWithDefault(msg, 18, 0),
    updatedon: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.LeadProto}
 */
proto.login.LeadProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.LeadProto;
  return proto.login.LeadProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.LeadProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.LeadProto}
 */
proto.login.LeadProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeadId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenumber(value);
      break;
    case 4:
      var value = /** @type {!proto.login.OperatorType} */ (reader.readEnum());
      msg.setOperatortype(value);
      break;
    case 5:
      var value = /** @type {!proto.login.LeadChannel} */ (reader.readEnum());
      msg.setChannel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 7:
      var value = new common_pb.AddressProto;
      reader.readMessage(value,common_pb.AddressProto.deserializeBinaryFromReader);
      msg.addAddresses(value);
      break;
    case 8:
      var value = /** @type {!proto.login.LandSizeInAcres} */ (reader.readEnum());
      msg.setLandsizeinacres(value);
      break;
    case 9:
      var value = /** @type {!proto.login.FarmingType} */ (reader.readEnum());
      msg.setFarmingtype(value);
      break;
    case 10:
      var value = new common_pb.CertificationDetails;
      reader.readMessage(value,common_pb.CertificationDetails.deserializeBinaryFromReader);
      msg.setCertificationdetails(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCrops(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainprofession(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationname(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSideprofession(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserinterviewnotes(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setEducation(value);
      break;
    case 17:
      var value = /** @type {!proto.login.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedon(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.LeadProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.LeadProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.LeadProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhonenumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOperatortype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      common_pb.AddressProto.serializeBinaryToWriter
    );
  }
  f = message.getLandsizeinacres();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getFarmingtype();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getCertificationdetails();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.CertificationDetails.serializeBinaryToWriter
    );
  }
  f = message.getCropsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getMainprofession();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getOrganizationname();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSideprofession();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getUserinterviewnotes();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getEducation();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getCreatedon();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getUpdatedon();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
};


/**
 * optional string lead_id = 1;
 * @return {string}
 */
proto.login.LeadProto.prototype.getLeadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setLeadId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.login.LeadProto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string phoneNumber = 3;
 * @return {string}
 */
proto.login.LeadProto.prototype.getPhonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setPhonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional OperatorType operatorType = 4;
 * @return {!proto.login.OperatorType}
 */
proto.login.LeadProto.prototype.getOperatortype = function() {
  return /** @type {!proto.login.OperatorType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.login.OperatorType} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setOperatortype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional LeadChannel channel = 5;
 * @return {!proto.login.LeadChannel}
 */
proto.login.LeadProto.prototype.getChannel = function() {
  return /** @type {!proto.login.LeadChannel} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.login.LeadChannel} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setChannel = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string source = 6;
 * @return {string}
 */
proto.login.LeadProto.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated AddressProto addresses = 7;
 * @return {!Array<!proto.login.AddressProto>}
 */
proto.login.LeadProto.prototype.getAddressesList = function() {
  return /** @type{!Array<!proto.login.AddressProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.AddressProto, 7));
};


/**
 * @param {!Array<!proto.login.AddressProto>} value
 * @return {!proto.login.LeadProto} returns this
*/
proto.login.LeadProto.prototype.setAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.login.AddressProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.login.AddressProto}
 */
proto.login.LeadProto.prototype.addAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.login.AddressProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};


/**
 * optional LandSizeInAcres landSizeInAcres = 8;
 * @return {!proto.login.LandSizeInAcres}
 */
proto.login.LeadProto.prototype.getLandsizeinacres = function() {
  return /** @type {!proto.login.LandSizeInAcres} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.login.LandSizeInAcres} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setLandsizeinacres = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional FarmingType farmingType = 9;
 * @return {!proto.login.FarmingType}
 */
proto.login.LeadProto.prototype.getFarmingtype = function() {
  return /** @type {!proto.login.FarmingType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.login.FarmingType} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setFarmingtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional CertificationDetails certificationDetails = 10;
 * @return {?proto.login.CertificationDetails}
 */
proto.login.LeadProto.prototype.getCertificationdetails = function() {
  return /** @type{?proto.login.CertificationDetails} */ (
    jspb.Message.getWrapperField(this, common_pb.CertificationDetails, 10));
};


/**
 * @param {?proto.login.CertificationDetails|undefined} value
 * @return {!proto.login.LeadProto} returns this
*/
proto.login.LeadProto.prototype.setCertificationdetails = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.clearCertificationdetails = function() {
  return this.setCertificationdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.login.LeadProto.prototype.hasCertificationdetails = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated string crops = 11;
 * @return {!Array<string>}
 */
proto.login.LeadProto.prototype.getCropsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setCropsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.addCrops = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.clearCropsList = function() {
  return this.setCropsList([]);
};


/**
 * optional string mainProfession = 12;
 * @return {string}
 */
proto.login.LeadProto.prototype.getMainprofession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setMainprofession = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string organizationName = 13;
 * @return {string}
 */
proto.login.LeadProto.prototype.getOrganizationname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setOrganizationname = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string sideProfession = 14;
 * @return {string}
 */
proto.login.LeadProto.prototype.getSideprofession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setSideprofession = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string userInterviewNotes = 15;
 * @return {string}
 */
proto.login.LeadProto.prototype.getUserinterviewnotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setUserinterviewnotes = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string education = 16;
 * @return {string}
 */
proto.login.LeadProto.prototype.getEducation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setEducation = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional Status status = 17;
 * @return {!proto.login.Status}
 */
proto.login.LeadProto.prototype.getStatus = function() {
  return /** @type {!proto.login.Status} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.login.Status} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional int64 createdOn = 18;
 * @return {number}
 */
proto.login.LeadProto.prototype.getCreatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setCreatedon = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 updatedOn = 19;
 * @return {number}
 */
proto.login.LeadProto.prototype.getUpdatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.login.LeadProto} returns this
 */
proto.login.LeadProto.prototype.setUpdatedon = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.FetchLeadsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.login.FetchLeadsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.FetchLeadsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.FetchLeadsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    leadfilters: (f = msg.getLeadfilters()) && proto.login.LeadFilters.toObject(includeInstance, f),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.FetchLeadsRequest}
 */
proto.login.FetchLeadsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.FetchLeadsRequest;
  return proto.login.FetchLeadsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.FetchLeadsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.FetchLeadsRequest}
 */
proto.login.FetchLeadsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.login.LeadFilters;
      reader.readMessage(value,proto.login.LeadFilters.deserializeBinaryFromReader);
      msg.setLeadfilters(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.FetchLeadsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.FetchLeadsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.FetchLeadsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.FetchLeadsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadfilters();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.login.LeadFilters.serializeBinaryToWriter
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional LeadFilters leadFilters = 1;
 * @return {?proto.login.LeadFilters}
 */
proto.login.FetchLeadsRequest.prototype.getLeadfilters = function() {
  return /** @type{?proto.login.LeadFilters} */ (
    jspb.Message.getWrapperField(this, proto.login.LeadFilters, 1));
};


/**
 * @param {?proto.login.LeadFilters|undefined} value
 * @return {!proto.login.FetchLeadsRequest} returns this
*/
proto.login.FetchLeadsRequest.prototype.setLeadfilters = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.login.FetchLeadsRequest} returns this
 */
proto.login.FetchLeadsRequest.prototype.clearLeadfilters = function() {
  return this.setLeadfilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.login.FetchLeadsRequest.prototype.hasLeadfilters = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 pageNumber = 2;
 * @return {number}
 */
proto.login.FetchLeadsRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.login.FetchLeadsRequest} returns this
 */
proto.login.FetchLeadsRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pageSize = 3;
 * @return {number}
 */
proto.login.FetchLeadsRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.login.FetchLeadsRequest} returns this
 */
proto.login.FetchLeadsRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.LeadFilters.prototype.toObject = function(opt_includeInstance) {
  return proto.login.LeadFilters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.LeadFilters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadFilters.toObject = function(includeInstance, msg) {
  var f, obj = {
    operatortype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    landsizeinacres: jspb.Message.getFieldWithDefault(msg, 4, 0),
    farmingtype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    certificationdetails: (f = msg.getCertificationdetails()) && common_pb.CertificationDetails.toObject(includeInstance, f),
    mainprofession: jspb.Message.getFieldWithDefault(msg, 7, ""),
    organizationname: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sideprofession: jspb.Message.getFieldWithDefault(msg, 9, ""),
    education: jspb.Message.getFieldWithDefault(msg, 10, ""),
    status: jspb.Message.getFieldWithDefault(msg, 11, 0),
    addressfilters: (f = msg.getAddressfilters()) && proto.login.AddressFilters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.LeadFilters}
 */
proto.login.LeadFilters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.LeadFilters;
  return proto.login.LeadFilters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.LeadFilters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.LeadFilters}
 */
proto.login.LeadFilters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.login.OperatorType} */ (reader.readEnum());
      msg.setOperatortype(value);
      break;
    case 2:
      var value = /** @type {!proto.login.LeadChannel} */ (reader.readEnum());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {!proto.login.LandSizeInAcres} */ (reader.readEnum());
      msg.setLandsizeinacres(value);
      break;
    case 5:
      var value = /** @type {!proto.login.FarmingType} */ (reader.readEnum());
      msg.setFarmingtype(value);
      break;
    case 6:
      var value = new common_pb.CertificationDetails;
      reader.readMessage(value,common_pb.CertificationDetails.deserializeBinaryFromReader);
      msg.setCertificationdetails(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainprofession(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationname(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSideprofession(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEducation(value);
      break;
    case 11:
      var value = /** @type {!proto.login.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 12:
      var value = new proto.login.AddressFilters;
      reader.readMessage(value,proto.login.AddressFilters.deserializeBinaryFromReader);
      msg.setAddressfilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.LeadFilters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.LeadFilters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.LeadFilters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadFilters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperatortype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLandsizeinacres();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFarmingtype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCertificationdetails();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.CertificationDetails.serializeBinaryToWriter
    );
  }
  f = message.getMainprofession();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOrganizationname();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSideprofession();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEducation();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getAddressfilters();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.login.AddressFilters.serializeBinaryToWriter
    );
  }
};


/**
 * optional OperatorType operatorType = 1;
 * @return {!proto.login.OperatorType}
 */
proto.login.LeadFilters.prototype.getOperatortype = function() {
  return /** @type {!proto.login.OperatorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.login.OperatorType} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setOperatortype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional LeadChannel channel = 2;
 * @return {!proto.login.LeadChannel}
 */
proto.login.LeadFilters.prototype.getChannel = function() {
  return /** @type {!proto.login.LeadChannel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.login.LeadChannel} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setChannel = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.login.LeadFilters.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional LandSizeInAcres landSizeInAcres = 4;
 * @return {!proto.login.LandSizeInAcres}
 */
proto.login.LeadFilters.prototype.getLandsizeinacres = function() {
  return /** @type {!proto.login.LandSizeInAcres} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.login.LandSizeInAcres} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setLandsizeinacres = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional FarmingType farmingType = 5;
 * @return {!proto.login.FarmingType}
 */
proto.login.LeadFilters.prototype.getFarmingtype = function() {
  return /** @type {!proto.login.FarmingType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.login.FarmingType} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setFarmingtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional CertificationDetails certificationDetails = 6;
 * @return {?proto.login.CertificationDetails}
 */
proto.login.LeadFilters.prototype.getCertificationdetails = function() {
  return /** @type{?proto.login.CertificationDetails} */ (
    jspb.Message.getWrapperField(this, common_pb.CertificationDetails, 6));
};


/**
 * @param {?proto.login.CertificationDetails|undefined} value
 * @return {!proto.login.LeadFilters} returns this
*/
proto.login.LeadFilters.prototype.setCertificationdetails = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.clearCertificationdetails = function() {
  return this.setCertificationdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.login.LeadFilters.prototype.hasCertificationdetails = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string mainProfession = 7;
 * @return {string}
 */
proto.login.LeadFilters.prototype.getMainprofession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setMainprofession = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string organizationName = 8;
 * @return {string}
 */
proto.login.LeadFilters.prototype.getOrganizationname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setOrganizationname = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string sideProfession = 9;
 * @return {string}
 */
proto.login.LeadFilters.prototype.getSideprofession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setSideprofession = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string education = 10;
 * @return {string}
 */
proto.login.LeadFilters.prototype.getEducation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setEducation = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional Status status = 11;
 * @return {!proto.login.Status}
 */
proto.login.LeadFilters.prototype.getStatus = function() {
  return /** @type {!proto.login.Status} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.login.Status} value
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional AddressFilters addressFilters = 12;
 * @return {?proto.login.AddressFilters}
 */
proto.login.LeadFilters.prototype.getAddressfilters = function() {
  return /** @type{?proto.login.AddressFilters} */ (
    jspb.Message.getWrapperField(this, proto.login.AddressFilters, 12));
};


/**
 * @param {?proto.login.AddressFilters|undefined} value
 * @return {!proto.login.LeadFilters} returns this
*/
proto.login.LeadFilters.prototype.setAddressfilters = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.login.LeadFilters} returns this
 */
proto.login.LeadFilters.prototype.clearAddressfilters = function() {
  return this.setAddressfilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.login.LeadFilters.prototype.hasAddressfilters = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.AddressFilters.prototype.toObject = function(opt_includeInstance) {
  return proto.login.AddressFilters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.AddressFilters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.AddressFilters.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    city: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    country: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.AddressFilters}
 */
proto.login.AddressFilters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.AddressFilters;
  return proto.login.AddressFilters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.AddressFilters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.AddressFilters}
 */
proto.login.AddressFilters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.AddressFilters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.AddressFilters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.AddressFilters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.AddressFilters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.login.AddressFilters.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.AddressFilters} returns this
 */
proto.login.AddressFilters.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string city = 2;
 * @return {string}
 */
proto.login.AddressFilters.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.AddressFilters} returns this
 */
proto.login.AddressFilters.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.login.AddressFilters.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.AddressFilters} returns this
 */
proto.login.AddressFilters.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country = 4;
 * @return {string}
 */
proto.login.AddressFilters.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.AddressFilters} returns this
 */
proto.login.AddressFilters.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.login.LeadListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.LeadListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.login.LeadListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.LeadListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    leadsList: jspb.Message.toObjectList(msg.getLeadsList(),
    proto.login.LeadProto.toObject, includeInstance),
    totalleads: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.LeadListResponse}
 */
proto.login.LeadListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.LeadListResponse;
  return proto.login.LeadListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.LeadListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.LeadListResponse}
 */
proto.login.LeadListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.login.LeadProto;
      reader.readMessage(value,proto.login.LeadProto.deserializeBinaryFromReader);
      msg.addLeads(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalleads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.LeadListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.LeadListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.LeadListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.login.LeadProto.serializeBinaryToWriter
    );
  }
  f = message.getTotalleads();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated LeadProto leads = 1;
 * @return {!Array<!proto.login.LeadProto>}
 */
proto.login.LeadListResponse.prototype.getLeadsList = function() {
  return /** @type{!Array<!proto.login.LeadProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.login.LeadProto, 1));
};


/**
 * @param {!Array<!proto.login.LeadProto>} value
 * @return {!proto.login.LeadListResponse} returns this
*/
proto.login.LeadListResponse.prototype.setLeadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.login.LeadProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.login.LeadProto}
 */
proto.login.LeadListResponse.prototype.addLeads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.login.LeadProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.login.LeadListResponse} returns this
 */
proto.login.LeadListResponse.prototype.clearLeadsList = function() {
  return this.setLeadsList([]);
};


/**
 * optional int64 totalLeads = 2;
 * @return {number}
 */
proto.login.LeadListResponse.prototype.getTotalleads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.login.LeadListResponse} returns this
 */
proto.login.LeadListResponse.prototype.setTotalleads = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.login.BulkIdRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.BulkIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.login.BulkIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.BulkIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.BulkIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    leadidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.BulkIdRequest}
 */
proto.login.BulkIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.BulkIdRequest;
  return proto.login.BulkIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.BulkIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.BulkIdRequest}
 */
proto.login.BulkIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLeadids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.BulkIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.BulkIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.BulkIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.BulkIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string leadIds = 1;
 * @return {!Array<string>}
 */
proto.login.BulkIdRequest.prototype.getLeadidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.login.BulkIdRequest} returns this
 */
proto.login.BulkIdRequest.prototype.setLeadidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.login.BulkIdRequest} returns this
 */
proto.login.BulkIdRequest.prototype.addLeadids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.login.BulkIdRequest} returns this
 */
proto.login.BulkIdRequest.prototype.clearLeadidsList = function() {
  return this.setLeadidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.login.LeadIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.login.LeadIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.login.LeadIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    leadid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.login.LeadIdRequest}
 */
proto.login.LeadIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.login.LeadIdRequest;
  return proto.login.LeadIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.login.LeadIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.login.LeadIdRequest}
 */
proto.login.LeadIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeadid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.login.LeadIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.login.LeadIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.login.LeadIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.login.LeadIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string leadId = 1;
 * @return {string}
 */
proto.login.LeadIdRequest.prototype.getLeadid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.login.LeadIdRequest} returns this
 */
proto.login.LeadIdRequest.prototype.setLeadid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.login.OperatorType = {
  UNSPECIFIED_OPERATOR: 0,
  FARMER: 1,
  INPUT_PROVIDER: 2,
  AGRI_CONSULTANT: 3,
  TRACENET_CONSULTANT: 4
};

/**
 * @enum {number}
 */
proto.login.LeadChannel = {
  UNSPECIFIED_CHANNEL: 0,
  WHATSAPP_GROUP: 1,
  FACEBOOK_GROUP: 2,
  FACEBOOK_AD: 3
};

/**
 * @enum {number}
 */
proto.login.Status = {
  UNSPECIFIED_STATUS: 0,
  RELEVANT: 1,
  NOT_RELEVANT: 2,
  NOW_VERIFIED: 3
};

goog.object.extend(exports, proto.login);
